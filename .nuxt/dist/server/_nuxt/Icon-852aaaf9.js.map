{"version":3,"file":"Icon-852aaaf9.js","sources":["../../../../node_modules/nuxt/dist/app/config.mjs","../../../../node_modules/nuxt-icon/dist/runtime/Icon.vue"],"sourcesContent":["import { reactive } from \"vue\";\nimport { useNuxtApp } from \"./nuxt.mjs\";\nimport __appConfig from \"#build/app.config.mjs\";\nexport const _getAppConfig = () => __appConfig;\nfunction deepDelete(obj, newObj) {\n  for (const key in obj) {\n    const val = newObj[key];\n    if (!(key in newObj)) {\n      delete obj[key];\n    }\n    if (val !== null && typeof val === \"object\") {\n      deepDelete(obj[key], newObj[key]);\n    }\n  }\n}\nfunction deepAssign(obj, newObj) {\n  for (const key in newObj) {\n    const val = newObj[key];\n    if (val !== null && typeof val === \"object\") {\n      obj[key] = obj[key] || {};\n      deepAssign(obj[key], val);\n    } else {\n      obj[key] = val;\n    }\n  }\n}\nexport function useAppConfig() {\n  const nuxtApp = useNuxtApp();\n  if (!nuxtApp._appConfig) {\n    nuxtApp._appConfig = reactive(__appConfig);\n  }\n  return nuxtApp._appConfig;\n}\nexport function updateAppConfig(appConfig) {\n  const _appConfig = useAppConfig();\n  deepAssign(_appConfig, appConfig);\n}\nif (process.dev) {\n  let applyHMR = function(newConfig) {\n    const appConfig = useAppConfig();\n    if (newConfig && appConfig) {\n      deepAssign(appConfig, newConfig);\n      deepDelete(appConfig, newConfig);\n    }\n  };\n  if (import.meta.hot) {\n    import.meta.hot.accept((newModule) => {\n      const newConfig = newModule._getAppConfig();\n      applyHMR(newConfig);\n    });\n  }\n  if (import.meta.webpackHot) {\n    import.meta.webpackHot.accept(\"#build/app.config.mjs\", () => {\n      applyHMR(__appConfig);\n    });\n  }\n}\n","<!-- eslint-disable vue/multi-word-component-names -->\n<script setup lang=\"ts\">\nimport type { PropType } from 'vue'\nimport type { IconifyIcon } from '@iconify/vue'\nimport { Icon as Iconify } from '@iconify/vue/dist/offline'\nimport { loadIcon } from '@iconify/vue'\nimport { useNuxtApp, useState, ref, useAppConfig, computed, watch } from '#imports'\n\nconst nuxtApp = useNuxtApp()\nconst appConfig = useAppConfig()\n\n// @ts-ignore\nconst aliases = appConfig?.nuxtIcon?.aliases || {}\n\ntype AliasesKeys = keyof typeof aliases\n\nconst props = defineProps({\n  name: {\n    type: String as PropType<AliasesKeys | (string & {})>,\n    required: true\n  },\n  size: {\n    type: String,\n    default: ''\n  }\n})\n\nconst state = useState<Record<string, IconifyIcon | undefined>>('icons', () => ({}))\nconst isFetching = ref(false)\nconst iconName = computed(() => ((appConfig as any)?.nuxtIcon?.aliases || {})[props.name] || props.name)\nconst icon = computed<IconifyIcon | undefined>(() => state.value?.[iconName.value])\nconst component = computed(() => nuxtApp.vueApp.component(iconName.value))\nconst sSize = computed(() => {\n  const size = props.size || appConfig.nuxtIcon?.size || '1em'\n  if (String(Number(size)) === size) {\n    return `${size}px`\n  }\n  return size\n})\nconst className = computed(() => (appConfig as any)?.nuxtIcon?.class ?? 'icon')\n\nasync function loadIconComponent () {\n  if (component.value) {\n    return\n  }\n  if (!state.value?.[iconName.value]) {\n    isFetching.value = true\n    state.value[iconName.value] = await loadIcon(iconName.value).catch(() => undefined)\n    isFetching.value = false\n  }\n}\n\nwatch(() => iconName.value, loadIconComponent)\n\n!component.value && await loadIconComponent()\n</script>\n\n<template>\n  <span v-if=\"isFetching\" :class=\"className\" :width=\"sSize\" :height=\"sSize\" />\n  <Iconify v-else-if=\"icon\" :icon=\"icon\" :class=\"className\" :width=\"sSize\" :height=\"sSize\" />\n  <Component :is=\"component\" v-else-if=\"component\" :class=\"className\" :width=\"sSize\" :height=\"sSize\" />\n  <span v-else :class=\"className\" :style=\"{ fontSize: sSize, lineHeight: sSize, width: sSize, height: sSize }\">{{ name }}</span>\n</template>\n\n<style scoped>\n.icon {\n  display: inline-block;\n  vertical-align: middle;\n}\n</style>\n"],"names":["_a","_withAsyncContext"],"mappings":";;;;;;;;;;;;;;;;;AA0BO,SAAS,eAAe;AAC7B,QAAM,UAAU;AAChB,MAAI,CAAC,QAAQ,YAAY;AACvB,YAAQ,aAAa,SAAS,WAAW;AAAA,EAC1C;AACD,SAAO,QAAQ;AACjB;;;;;;;;;;;;;;;;;;ACxBA,UAAA,UAAA;AACA,UAAA,YAAA;AAGA,kDAAA,aAAA,mBAAA,YAAA,CAAA;AAeA,UAAA,QAAA,SAAA,SAAA,OAAA,CAAA,EAAA;AACA,UAAA,aAAA,IAAA,KAAA;AACA,UAAA,WAAA,SAAA;;AAAA,gBAAAA,MAAA,uCAAA,aAAA,gBAAAA,IAAA,YAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA;AAAA,KAAA;AACA,UAAA,OAAA,SAAA,MAAA;;AAAA,cAAAA,MAAA,MAAA,UAAA,gBAAAA,IAAA,SAAA;AAAA,KAAA;AACA,UAAA,YAAA,SAAA,MAAA,QAAA,OAAA,UAAA,SAAA,KAAA,CAAA;AACA,UAAA,QAAA,SAAA,MAAA;;AACE,YAAA,OAAA,MAAA,UAAAA,MAAA,UAAA,aAAA,gBAAAA,IAAA,SAAA;AACA,UAAA,OAAA,OAAA,IAAA,CAAA,MAAA,MAAA;AACE,eAAA,GAAA;AAAA,MAAU;AAEZ,aAAA;AAAA,IAAO,CAAA;AAET,UAAA,YAAA,SAAA,MAAA;;AAAA,eAAAA,MAAA,uCAAA,aAAA,gBAAAA,IAAA,UAAA;AAAA,KAAA;AAEA,mBAAA,oBAAA;;AACE,UAAA,UAAA,OAAA;AACE;AAAA,MAAA;AAEF,UAAA,GAAAA,MAAA,MAAA,UAAA,gBAAAA,IAAA,SAAA,SAAA;AACE,mBAAA,QAAA;AACA,cAAA,MAAA,SAAA,KAAA,IAAA,MAAA,SAAA,SAAA,KAAA,EAAA,MAAA,MAAA,MAAA;AACA,mBAAA,QAAA;AAAA,MAAmB;AAAA,IACrB;AAGF,UAAA,MAAA,SAAA,OAAA,iBAAA;AAEA,KAAA,UAAA,UAAA,CAAA,QAAA,SAAA,IAAAC,iBAAA,MAAA,kBAAA,CAAA,GAAA,SAAA,MAAA,QAAA,UAAA,GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}